'use strict'

window.addEventListener("DOMContentLoaded", function() {

const budgetData = JSON.parse(localStorage.getItem('budgetData')) || [];

// === DOM —ç–ª–µ–º–µ–Ω—Ç—ã
const budgetForm = document.getElementById('budget-form'); //—Ñ–æ—Ä–º–∞
const budgetTable = document.getElementById('budget-table'); //—Ç–∞–±–ª–∏—Ü–∞ —Å –∑–∞–ø–∏—Å—è–º–∏
const typeSelect = document.getElementById('type'); //–≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∏–ø –∑–∞–ø–∏—Å–∏ (–î–æ—Ö–æ–¥, –†–∞—Å—Ö–æ–¥)
const submitButton = budgetForm.querySelector('button[type="submit"]'); //–∫–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
const categorySelect = document.getElementById('category'); //–≠–ª–µ–º–µ–Ω—Ç —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
const formSection = document.getElementById('edit-section');
const formTitle = document.getElementById('title-added-form');

// === DOM —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–∏–ª—å—Ç—Ä–∞ 
const filterCategorySelect = document.getElementById('filter-category'); //–§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
const filterTypeSelect = document.getElementById('filter-type');
const filterStartDate = document.getElementById('filter-start-date');
const filterEndDate = document.getElementById('filter-end-date');
const toggleFilterBtn = document.getElementById("toggle-filter-btn");
const filterSection = document.getElementById("filter-section");

// === –ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
let incomeCategories = ["–ó–∞—Ä–ø–ª–∞—Ç–∞", "–ü–æ–¥–∞—Ä–∫–∏", "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏"]; //–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤
let expenseCategories = ["–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç", "–ï–¥–∞", "–û–¥–µ–∂–¥–∞", "–ú–µ–¥–∏—Ü–∏–Ω–∞", "–ü–æ–¥–∞—Ä–∫–∏"]; //–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤
let editIndex = null; //—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–π –∑–∞–ø–∏—Å–∏ 


// === –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏

// C–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –≤ localStorage 
function saveData() {
    budgetData.sort((a, b) => new Date(a.date) - new Date(b.date));
    localStorage.setItem('budgetData', JSON.stringify(budgetData))
}

// –†–µ–Ω–¥–µ—Ä —Ç–∞–±–ª–∏—Ü—ã —Å –∑–∞–ø–∏—Å—è–º–∏ 
function renderTable(data = budgetData) {
    budgetTable.innerHTML = '';
    data.forEach((item, index) => {
        const row =document.createElement('tr');

        row.classList.add(item.type === '–†–∞—Å—Ö–æ–¥' ? 'expense' : 'income');

        row.innerHTML = `
        <td>${item.category}</td> 
        <td>${item.description}</td>
        <td class= "amount-cell">${item.amount.toLocaleString()} ‚ÇΩ</td>
        <td>${item.date}</td>
        <td>
           <button class="edit-btn">‚úèÔ∏è</button>
            <button class="delete-btn">üóëÔ∏è</button>
        </td>
        `;
        budgetTable.appendChild(row);

        const editBtn = row.querySelector('.edit-btn');
        const deleteBtn = row.querySelector('.delete-btn');

        editBtn.addEventListener('click', () => editRecord(index));
        deleteBtn.addEventListener('click', () => deleteRecord(index));
        updateBalance();
    });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å—á—ë—Ç–∞
function updateBalance(){
    const balance = budgetData.reduce((total, item) => {
        return item.type === '–î–æ—Ö–æ–¥' 
        ? total + item.amount 
        : total - item.amount;
    }, 0);

    const balanceElement = document.getElementById('current-balance');
    balanceElement.textContent = `–ë–∞–ª–∞–Ω—Å: ${balance.toLocaleString()} ‚ÇΩ`;

    balanceElement.classList.remove('income', 'expense');
    if (balance < 0) {
        balanceElement.classList.add('expense');
    } else {
        balanceElement.classList.add('income')
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ—Ä–º–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –∑–∞–ø–∏—Å–∏
function updateCategoryOptions(type) {
    categorySelect.innerHTML = ''; // –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –æ–ø—Ü–∏–π
    const categories = type === '–†–∞—Å—Ö–æ–¥' ? expenseCategories : incomeCategories;

    categories.forEach(category => {
        const option = document.createElement('option');
        option.value = category;
        option.textContent = category;
        categorySelect.appendChild(option);
    });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Ñ–æ—Ä–º—ã-—Ñ–∏–ª—å—Ç—Ä–∞ 
function updateFilterCategory (type = "") {
    filterCategorySelect.innerHTML = '<option value="">–í—Å–µ</option>'; 
    let categories;

    if (type) {
        categories = type === '–†–∞—Å—Ö–æ–¥' ? expenseCategories : incomeCategories;
    } else {
        categories =[...incomeCategories, ...expenseCategories];
    }

    categories.forEach(category => {
        const option = document.createElement('option');
        option.value = category;
        option.textContent = category;
        filterCategorySelect.appendChild(option);
    });
}

// –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏
function deleteRecord(index){
    budgetData.splice(index, 1);
    saveData();
    renderTable();
    updateBalance();
    showNotification('–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!');
}

// –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏
function editRecord(index) {
    formTitle.textContent = "–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å"
    const item = budgetData[index];

    document.getElementById('description').value = item.description;
    document.getElementById('amount').value = item.amount;
    typeSelect.value = item.type;
    updateCategoryOptions(item.type);
    categorySelect.value = item.category;
    document.getElementById('date').value = item.date;

    submitButton.textContent = '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è';
    editIndex = index;

    
      // –ü–æ–¥—Å–≤–µ—Ç–∏—Ç—å —Ñ–æ—Ä–º—É –∏ –ø—Ä–æ–∫—Ä—É—Ç–∏—Ç—å –∫ –Ω–µ–π
      formSection.classList.add('highlight');
  
      // –ü—Ä–æ–∫—Ä—É—Ç–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫ —Ñ–æ—Ä–º–µ
      formSection.scrollIntoView({ behavior: 'smooth' });

      
}

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function showNotification(message) {
    const notification = document.getElementById('notification');
    if (!notification) return;
    notification.textContent = message;
    notification.classList.remove('hidden');
    notification.classList.add('show');
    setTimeout(() => notification.classList.remove('show'), 2000);
}

// –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
function applyFilters() {
    debugger;
    const filterCategorySelectValue = filterCategorySelect.value;
    const filterTypeSelectValue = filterTypeSelect.value;
    const filterStartDateValue = filterStartDate.value;
    const filterEndDateValue = filterEndDate.value;

    const filteredData = budgetData.filter(item => {
        const matchesType = !filterTypeSelectValue || item.type === filterTypeSelectValue;
        const matchesCategory = !filterCategorySelectValue || item.category === filterCategorySelectValue;
        const matchesStartDate = !filterStartDateValue || new Date(item.date) >= new Date(filterStartDateValue);
        const matchesEndDate = !filterEndDateValue || new Date(item.date) <= new Date(filterEndDateValue);

        return matchesType && matchesCategory && matchesStartDate && matchesEndDate
    });

    renderTable(filteredData);
}


// === –°–æ–±—ã—Ç–∏—è
 
// –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ—Ä–º—ã —Ñ–æ—Ä–º—ã (–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏)
budgetForm.addEventListener('submit', (e) => {
    e.preventDefault();
    const description = document.getElementById('description').value;
    const amount = parseFloat(document.getElementById('amount').value);
    const type = document.getElementById('type').value;
    const category = document.getElementById('category').value;
    const date = document.getElementById('date').value || new Date().toISOString().split('T')[0];
    
    const newRecord = { description, amount, type, category, date };
    if(editIndex !== null) {
        budgetData[editIndex] = newRecord;
        editIndex = null;
        showNotification('–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞!');
        formSection.classList.remove("highlight")
        submitButton.textContent = '–î–æ–±–∞–≤–∏—Ç—å';
        formTitle.textContent = "–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å";
    } else {
        budgetData.push(newRecord);
    }
    saveData();
    renderTable();
    updateBalance();
    budgetForm.reset();
    updateCategoryOptions('–†–∞—Å—Ö–æ–¥');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∏–ø–∞ –∑–∞–ø–∏—Å–∏ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ—Ä–º—ã
typeSelect.addEventListener('change', (e) => {
    updateCategoryOptions(e.target.value);
});

// –û—Ç–∫—Ä—ã—Ç–∏–µ\–∑–∞–∫—Ä—ã—Ç–∏–µ —Ñ–æ—Ä–º—ã —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
toggleFilterBtn.addEventListener("click", function(){
    filterSection.classList.toggle("hidden");
    if (filterSection.classList.contains("hidden")) {
        toggleFilterBtn.textContent = "–ü–æ–∫–∞–∑–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã";
    } else {
        toggleFilterBtn.textContent = "–°–∫—Ä—ã—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã";
    }
});

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã-—Ñ–∏–ª—å—Ç—Ä–∞
document.getElementById('filter-form').addEventListener('submit', (e) => {
    e.preventDefault(); // –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    applyFilters();
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∏–ø–∞ –∑–∞–ø–∏—Å–∏ –¥–ª—è —Ñ–æ—Ä–º—ã-—Ñ–∏–ª—å—Ç—Ä–∞ 
filterTypeSelect.addEventListener('change', (e) => {
    updateFilterCategory(e.target.value);
});



 updateBalance();
 renderTable();
 updateCategoryOptions(typeSelect.value);
 updateFilterCategory();

})